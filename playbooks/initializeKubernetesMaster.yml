---
# Kubernetes initialization steps for Master.  Assumes that the generic installation has already been completed.    
- name: Initialize Kubernetes on a Master node 
  hosts: k8s-master
  remote_user: lnxcfg
  become: true
  become_method: sudo
  become_user: root

  tasks:  

#     - name: Download the RBAC config file 
#       get_url:
#         url: https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
#         dest: /home/lnxcfg/rbac-kdd.yaml
#         mode: 0440
#       become: yes
#       become_user: root

     - name: Download the Calico config file 
       get_url:
         url: https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
         dest: /home/lnxcfg/calico.yaml
         mode: 0440
       become: yes
       become_user: root
  
#     - name: Put cidr for overlay network into environment variable
#       shell: MY_CALICO_CIDR=$( cat /home/lnxcfg/calico.yaml | grep -A 1 CALICO_IPV4POOL_CIDR | grep value | cut -d ':' -f2 | tr -d ' "')
#       become: yes
#       become_user: root

     #Start test of new variable approach
     - name: Define cidr for calico as a variable in the task
       shell: echo $( cat /home/lnxcfg/calico.yaml | grep -A 1 CALICO_IPV4POOL_CIDR | grep value | cut -d ':' -f2 | tr -d ' "')
       register: with_output
       become: yes
       become_user: root

     - name: Run kubeadm init using the calico variable just created
       shell: kubeadm init --kubernetes-version 1.13.1 --pod-network-cidr {{ item }} | tee kubeadm-init.out
       with_items: 
         - "{{ with_output.stdout_lines }}"
       become: yes
       become_user: root  
     #End test of new variable approach

     #Confirm that kubeadm init has created the admin.conf file  
     - name: Wait until the file /etc/kubernetes/admin.conf is present before continuing
       wait_for:
         path: /etc/kubernetes/admin.conf
       sudo: true
       sudo_user: lnxcfg

     - name: Create kube directory 
       shell: mkdir -p $HOME/.kube
       sudo: true
       sudo_user: lnxcfg

     - name: Change ownership of /etc/kubernetes so that the next step can copy a config file from it 
       shell: chown -R lnxcfg:lnxcfg /etc/kubernetes
       become: yes
       become_user: root
       
     - name: copy admin_conf file into kube_config directory 
       shell: cp -i /etc/kubernetes/admin.conf $HOME/.kube/config 
       sudo: true
       sudo_user: lnxcfg

     - name: Change ownership of kube_config file 
       shell: chown $(id -u):$(id -g) $HOME/.kube/config 
       sudo: true
       sudo_user: lnxcfg       
       
     # Then deploy a pod network to the cluster 
     - name: Deploy a pod network to the cluster 
       shell: kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
       sudo: true
       sudo_user: lnxcfg       

     - name: Apply the RBAC config file to the cluster
       shell: kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
       sudo: true
       sudo_user: lnxcfg       

     # Enable bash autocompletion
     - name: Deploy a pod network to the cluster 
       shell: source <(kubectl completion bash)

     - name: Deploy a pod network to the cluster 
       shell: echo "source <(kubectl completion bash)" >>~/.bashrc
